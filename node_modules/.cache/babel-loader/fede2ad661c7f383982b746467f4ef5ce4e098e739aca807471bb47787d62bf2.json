{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nconst useTypingEffect = (textArray, typingSpeed = 100, pauseTime = 1500) => {\n  _s();\n  const [displayText, setDisplayText] = useState(\"\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [charIndex, setCharIndex] = useState(0);\n  const [isDeleting, setIsDeleting] = useState(false);\n  useEffect(() => {\n    const currentText = textArray[currentIndex];\n    let typingInterval;\n    if (isDeleting) {\n      typingInterval = setTimeout(() => {\n        setDisplayText(prev => prev.slice(0, prev.length - 1));\n        setCharIndex(prev => prev - 1);\n      }, typingSpeed / 2); // 삭제 속도는 더 빠르게\n    } else {\n      typingInterval = setTimeout(() => {\n        setDisplayText(prev => prev + currentText[charIndex]);\n        setCharIndex(prev => prev + 1);\n      }, typingSpeed);\n    }\n\n    // 현재 텍스트를 다 썼으면 삭제 모드\n    if (!isDeleting && displayText === currentText) {\n      setTimeout(() => setIsDeleting(true), pauseTime);\n    } else if (isDeleting && displayText === \"\") {\n      setIsDeleting(false);\n      setCharIndex(0);\n      setCurrentIndex(prev => (prev + 1) % textArray.length); // 다음 텍스트로\n    }\n    return () => clearTimeout(typingInterval);\n  }, [displayText, isDeleting, charIndex, currentIndex, textArray, typingSpeed, pauseTime]);\n  return displayText;\n};\n_s(useTypingEffect, \"KzzNtCJ+nqYkytfiS38qUb7CSq0=\");\nexport default useTypingEffect;","map":{"version":3,"names":["useState","useEffect","useTypingEffect","textArray","typingSpeed","pauseTime","_s","displayText","setDisplayText","currentIndex","setCurrentIndex","charIndex","setCharIndex","isDeleting","setIsDeleting","currentText","typingInterval","setTimeout","prev","slice","length","clearTimeout"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Profile/js/useTypingEffect.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nconst useTypingEffect = (textArray, typingSpeed = 100, pauseTime = 1500) => {\n    const [displayText, setDisplayText] = useState(\"\");\n    const [currentIndex, setCurrentIndex] = useState(0);\n    const [charIndex, setCharIndex] = useState(0);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n    useEffect(() => {\n        const currentText = textArray[currentIndex];\n        let typingInterval;\n\n        if (isDeleting) {\n            typingInterval = setTimeout(() => {\n                setDisplayText((prev) => prev.slice(0, prev.length - 1));\n                setCharIndex((prev) => prev - 1);\n            }, typingSpeed / 2); // 삭제 속도는 더 빠르게\n        } else {\n            typingInterval = setTimeout(() => {\n                setDisplayText((prev) => prev + currentText[charIndex]);\n                setCharIndex((prev) => prev + 1);\n            }, typingSpeed);\n        }\n\n        // 현재 텍스트를 다 썼으면 삭제 모드\n        if (!isDeleting && displayText === currentText) {\n            setTimeout(() => setIsDeleting(true), pauseTime);\n        } else if (isDeleting && displayText === \"\") {\n            setIsDeleting(false);\n            setCharIndex(0);\n            setCurrentIndex((prev) => (prev + 1) % textArray.length); // 다음 텍스트로\n        }\n\n        return () => clearTimeout(typingInterval);\n    }, [displayText, isDeleting, charIndex, currentIndex, textArray, typingSpeed, pauseTime]);\n\n    return displayText;\n};\n\nexport default useTypingEffect;\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,eAAe,GAAGA,CAACC,SAAS,EAAEC,WAAW,GAAG,GAAG,EAAEC,SAAS,GAAG,IAAI,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACnD,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZ,MAAMc,WAAW,GAAGZ,SAAS,CAACM,YAAY,CAAC;IAC3C,IAAIO,cAAc;IAElB,IAAIH,UAAU,EAAE;MACZG,cAAc,GAAGC,UAAU,CAAC,MAAM;QAC9BT,cAAc,CAAEU,IAAI,IAAKA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAED,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,CAAC;QACxDR,YAAY,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACpC,CAAC,EAAEd,WAAW,GAAG,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC,MAAM;MACHY,cAAc,GAAGC,UAAU,CAAC,MAAM;QAC9BT,cAAc,CAAEU,IAAI,IAAKA,IAAI,GAAGH,WAAW,CAACJ,SAAS,CAAC,CAAC;QACvDC,YAAY,CAAEM,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;MACpC,CAAC,EAAEd,WAAW,CAAC;IACnB;;IAEA;IACA,IAAI,CAACS,UAAU,IAAIN,WAAW,KAAKQ,WAAW,EAAE;MAC5CE,UAAU,CAAC,MAAMH,aAAa,CAAC,IAAI,CAAC,EAAET,SAAS,CAAC;IACpD,CAAC,MAAM,IAAIQ,UAAU,IAAIN,WAAW,KAAK,EAAE,EAAE;MACzCO,aAAa,CAAC,KAAK,CAAC;MACpBF,YAAY,CAAC,CAAC,CAAC;MACfF,eAAe,CAAEQ,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIf,SAAS,CAACiB,MAAM,CAAC,CAAC,CAAC;IAC9D;IAEA,OAAO,MAAMC,YAAY,CAACL,cAAc,CAAC;EAC7C,CAAC,EAAE,CAACT,WAAW,EAAEM,UAAU,EAAEF,SAAS,EAAEF,YAAY,EAAEN,SAAS,EAAEC,WAAW,EAAEC,SAAS,CAAC,CAAC;EAEzF,OAAOE,WAAW;AACtB,CAAC;AAACD,EAAA,CAnCIJ,eAAe;AAqCrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}