{"ast":null,"code":"var _jsxFileName = \"/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Profile/Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport useTitleCycle from \"./js/useTitleCycle\"; // 커스텀 훅 임포트\nimport \"./css/Profile.css\"; // 스타일 파일 임포트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const title = useTitleCycle(); // 순환되는 제목 가져오기\n  const [displayedTitle, setDisplayedTitle] = useState(\"\"); // 타이핑될 글자 상태\n\n  useEffect(() => {\n    if (!title) return; // title이 없으면 실행하지 않음\n\n    let index = 0; // 타이핑 인덱스 초기화\n    setDisplayedTitle(\"\"); // 새 타이틀 시작 시 초기화\n\n    const typingEffect = setInterval(() => {\n      setDisplayedTitle(prev => prev + title[index]); // 글자 하나씩 추가\n      index++;\n      if (index === title.length) {\n        clearInterval(typingEffect); // 타이핑 완료 시 인터벌 정리\n      }\n    }, 100); // 글자당 100ms 타이핑 속도\n\n    return () => clearInterval(typingEffect); // 타이틀 변경 시 또는 컴포넌트 언마운트 시 정리\n  }, [title]); // title이 변경될 때마다 실행\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"profile-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"your-photo.jpg\",\n        alt: \"Kim Tae Woo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"profile-title\",\n        children: displayedTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"profile-description\",\n        children: [\"\\uC548\\uB155\\uD558\\uC138\\uC694! \\uC800\\uB294 \\uAC8C\\uC784 \\uAC1C\\uBC1C\\uC790 \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Kim Tae Woo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 38\n        }, this), \"\\uC785\\uB2C8\\uB2E4.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 70\n        }, this), \"\\uD601\\uC2E0\\uC801\\uC778 \\uAC8C\\uC784 \\uACBD\\uD5D8\\uC744 \\uB9CC\\uB4E4\\uAE30 \\uC704\\uD574 \\uD56D\\uC0C1 \\uB178\\uB825\\uD558\\uACE0 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n};\n_s(Profile, \"Ye2ZSBEn5ngDFq2XHdI4GNDx9CQ=\", false, function () {\n  return [useTitleCycle];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useState","useTitleCycle","jsxDEV","_jsxDEV","Profile","_s","title","displayedTitle","setDisplayedTitle","index","typingEffect","setInterval","prev","length","clearInterval","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Profile/Profile.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport useTitleCycle from \"./js/useTitleCycle\"; // 커스텀 훅 임포트\nimport \"./css/Profile.css\"; // 스타일 파일 임포트\n\nconst Profile = () => {\n    const title = useTitleCycle(); // 순환되는 제목 가져오기\n    const [displayedTitle, setDisplayedTitle] = useState(\"\"); // 타이핑될 글자 상태\n\n    useEffect(() => {\n        if (!title) return; // title이 없으면 실행하지 않음\n\n        let index = 0; // 타이핑 인덱스 초기화\n        setDisplayedTitle(\"\"); // 새 타이틀 시작 시 초기화\n\n        const typingEffect = setInterval(() => {\n            setDisplayedTitle((prev) => prev + title[index]); // 글자 하나씩 추가\n            index++;\n\n            if (index === title.length) {\n                clearInterval(typingEffect); // 타이핑 완료 시 인터벌 정리\n            }\n        }, 100); // 글자당 100ms 타이핑 속도\n\n        return () => clearInterval(typingEffect); // 타이틀 변경 시 또는 컴포넌트 언마운트 시 정리\n    }, [title]); // title이 변경될 때마다 실행\n\n    return (\n        <section className=\"profile-section\">\n            <div className=\"profile-image\">\n                <img src=\"your-photo.jpg\" alt=\"Kim Tae Woo\" />\n            </div>\n            <div className=\"profile-content\">\n                <h2 className=\"profile-title\">{displayedTitle}</h2>\n                <p className=\"profile-description\">\n                    안녕하세요! 저는 게임 개발자 <strong>Kim Tae Woo</strong>입니다.<br />\n                    혁신적인 게임 경험을 만들기 위해 항상 노력하고 있습니다.\n                </p>\n            </div>\n        </section>\n    );\n};\n\nexport default Profile;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,oBAAoB,CAAC,CAAC;AAChD,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAMC,KAAK,GAAGL,aAAa,CAAC,CAAC,CAAC,CAAC;EAC/B,MAAM,CAACM,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1DD,SAAS,CAAC,MAAM;IACZ,IAAI,CAACO,KAAK,EAAE,OAAO,CAAC;;IAEpB,IAAIG,KAAK,GAAG,CAAC,CAAC,CAAC;IACfD,iBAAiB,CAAC,EAAE,CAAC,CAAC,CAAC;;IAEvB,MAAME,YAAY,GAAGC,WAAW,CAAC,MAAM;MACnCH,iBAAiB,CAAEI,IAAI,IAAKA,IAAI,GAAGN,KAAK,CAACG,KAAK,CAAC,CAAC,CAAC,CAAC;MAClDA,KAAK,EAAE;MAEP,IAAIA,KAAK,KAAKH,KAAK,CAACO,MAAM,EAAE;QACxBC,aAAa,CAACJ,YAAY,CAAC,CAAC,CAAC;MACjC;IACJ,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMI,aAAa,CAACJ,YAAY,CAAC,CAAC,CAAC;EAC9C,CAAC,EAAE,CAACJ,KAAK,CAAC,CAAC,CAAC,CAAC;;EAEb,oBACIH,OAAA;IAASY,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAChCb,OAAA;MAAKY,SAAS,EAAC,eAAe;MAAAC,QAAA,eAC1Bb,OAAA;QAAKc,GAAG,EAAC,gBAAgB;QAACC,GAAG,EAAC;MAAa;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACNnB,OAAA;MAAKY,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC5Bb,OAAA;QAAIY,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAET;MAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnDnB,OAAA;QAAGY,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,+EACd,eAAAb,OAAA;UAAAa,QAAA,EAAQ;QAAW;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,uBAAI,eAAAnB,OAAA;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,4JAE3D;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAElB,CAAC;AAACjB,EAAA,CApCID,OAAO;EAAA,QACKH,aAAa;AAAA;AAAAsB,EAAA,GADzBnB,OAAO;AAsCb,eAAeA,OAAO;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}