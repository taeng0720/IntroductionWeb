{"ast":null,"code":"var _jsxFileName = \"/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/ParticleCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from \"react\";\nimport Sketch from \"react-p5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleSystemSketch = () => {\n  _s();\n  const psRef = useRef(null); // ParticleSystem 객체를 useRef로 저장\n  let offset,\n    origin,\n    ptime = 0;\n  let bg = 0;\n\n  // 색상 팔레트\n  const colors = [\"#FFE300\", \"#FF7494\", \"#00E6FF\", \"#89FF47\"];\n\n  // Particle 클래스\n  class Particle {\n    constructor(pos, ppos, p5) {\n      this.pos = pos.copy();\n      this.col = p5.random(colors);\n      this.size = p5.random(5, 30);\n      this.fill = p5.random([0, 1]);\n      this.velocity = p5.createVector(0, 0);\n      this.acceleration = p5.Vector.sub(ppos, pos);\n      this.acceleration.mult(0.02);\n      this.offset = p5.createVector(p5.random(0, 1000), p5.random(0, 1000));\n    }\n    update(p5) {\n      this.velocity.add(this.acceleration);\n      this.pos.add(this.velocity);\n      this.pos.add(p5.createVector(10 * (p5.noise(this.offset.x) - 0.5), 10 * (p5.noise(this.offset.y) - 0.5)));\n      this.offset.x += 0.01;\n      this.offset.y += 0.01;\n      this.size *= 0.95;\n      this.acceleration.mult(0);\n      if (this.velocity.mag() > 1) this.velocity.mult(0.95);\n    }\n    isDead() {\n      return this.size < 1;\n    }\n    render(p5) {\n      if (this.fill === 1) {\n        p5.noStroke();\n        p5.fill(this.col);\n      } else {\n        p5.noFill();\n        p5.stroke(this.col);\n      }\n      p5.ellipse(this.pos.x, this.pos.y, this.size, this.size);\n    }\n  }\n\n  // ParticleSystem 클래스\n  class ParticleSystem {\n    constructor() {\n      this.particles = [];\n    }\n    addParticle(pos, ppos, p5) {\n      this.particles.push(new Particle(pos, ppos, p5));\n    }\n    run(p5) {\n      for (let i = this.particles.length - 1; i >= 0; i--) {\n        const p = this.particles[i];\n        p.update(p5);\n        p.render(p5);\n        if (p.isDead()) this.particles.splice(i, 1);\n      }\n    }\n  }\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef);\n    psRef.current = new ParticleSystem(); // ParticleSystem 객체 초기화\n    offset = p5.createVector(p5.random(1000), p5.random(1000));\n    origin = p5.createVector(p5.width / 2, p5.height / 2);\n  };\n  const draw = p5 => {\n    if (bg % 2 === 0) p5.background(87, 6, 140);else p5.background(0, 0, 0, 20);\n    if (psRef.current) {\n      // 마우스가 움직이지 않을 때 자동 생성\n      if (p5.mouseX === p5.pmouseX && p5.mouseY === p5.pmouseY && p5.millis() - ptime > 800) {\n        const step = p5.createVector(p5.noise(offset.x) - 0.5, p5.noise(offset.y) - 0.5);\n        step.mult(10);\n        let pos = p5.Vector.add(origin, step);\n        pos.x = (pos.x + p5.width) % p5.width;\n        pos.y = (pos.y + p5.height) % p5.height;\n        psRef.current.addParticle(pos, origin, p5);\n        origin = pos;\n        offset.x += 0.01;\n        offset.y += 0.01;\n      }\n      psRef.current.run(p5);\n    }\n  };\n  const windowResized = p5 => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  };\n  const mouseClicked = () => {\n    bg++;\n  };\n  const mouseMoved = p5 => {\n    if (psRef.current) {\n      const pos = p5.createVector(p5.mouseX, p5.mouseY);\n      const ppos = p5.createVector(p5.pmouseX, p5.pmouseY);\n      psRef.current.addParticle(pos, ppos, p5);\n      ptime = p5.millis();\n      origin = p5.createVector(p5.width / 2, p5.height / 2); // 리셋\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Sketch, {\n    setup: setup,\n    draw: draw,\n    windowResized: windowResized,\n    mouseClicked: mouseClicked,\n    mouseMoved: mouseMoved\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n_s(ParticleSystemSketch, \"J+cAkEhsK5HIhe6t1vbZchJVCfY=\");\n_c = ParticleSystemSketch;\nexport default ParticleSystemSketch;\nvar _c;\n$RefreshReg$(_c, \"ParticleSystemSketch\");","map":{"version":3,"names":["React","useRef","Sketch","jsxDEV","_jsxDEV","ParticleSystemSketch","_s","psRef","offset","origin","ptime","bg","colors","Particle","constructor","pos","ppos","p5","copy","col","random","size","fill","velocity","createVector","acceleration","Vector","sub","mult","update","add","noise","x","y","mag","isDead","render","noStroke","noFill","stroke","ellipse","ParticleSystem","particles","addParticle","push","run","i","length","p","splice","setup","canvasParentRef","createCanvas","windowWidth","windowHeight","parent","current","width","height","draw","background","mouseX","pmouseX","mouseY","pmouseY","millis","step","windowResized","resizeCanvas","mouseClicked","mouseMoved","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/ParticleCanvas.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport Sketch from \"react-p5\";\n\nconst ParticleSystemSketch = () => {\n  const psRef = useRef(null); // ParticleSystem 객체를 useRef로 저장\n  let offset, origin, ptime = 0;\n  let bg = 0;\n\n  // 색상 팔레트\n  const colors = [\"#FFE300\", \"#FF7494\", \"#00E6FF\", \"#89FF47\"];\n\n  // Particle 클래스\n  class Particle {\n    constructor(pos, ppos, p5) {\n      this.pos = pos.copy();\n      this.col = p5.random(colors);\n      this.size = p5.random(5, 30);\n      this.fill = p5.random([0, 1]);\n      this.velocity = p5.createVector(0, 0);\n      this.acceleration = p5.Vector.sub(ppos, pos);\n      this.acceleration.mult(0.02);\n      this.offset = p5.createVector(p5.random(0, 1000), p5.random(0, 1000));\n    }\n\n    update(p5) {\n      this.velocity.add(this.acceleration);\n      this.pos.add(this.velocity);\n      this.pos.add(\n        p5.createVector(\n          10 * (p5.noise(this.offset.x) - 0.5),\n          10 * (p5.noise(this.offset.y) - 0.5)\n        )\n      );\n      this.offset.x += 0.01;\n      this.offset.y += 0.01;\n      this.size *= 0.95;\n      this.acceleration.mult(0);\n      if (this.velocity.mag() > 1) this.velocity.mult(0.95);\n    }\n\n    isDead() {\n      return this.size < 1;\n    }\n\n    render(p5) {\n      if (this.fill === 1) {\n        p5.noStroke();\n        p5.fill(this.col);\n      } else {\n        p5.noFill();\n        p5.stroke(this.col);\n      }\n      p5.ellipse(this.pos.x, this.pos.y, this.size, this.size);\n    }\n  }\n\n  // ParticleSystem 클래스\n  class ParticleSystem {\n    constructor() {\n      this.particles = [];\n    }\n\n    addParticle(pos, ppos, p5) {\n      this.particles.push(new Particle(pos, ppos, p5));\n    }\n\n    run(p5) {\n      for (let i = this.particles.length - 1; i >= 0; i--) {\n        const p = this.particles[i];\n        p.update(p5);\n        p.render(p5);\n        if (p.isDead()) this.particles.splice(i, 1);\n      }\n    }\n  }\n\n  const setup = (p5, canvasParentRef) => {\n    p5.createCanvas(p5.windowWidth, p5.windowHeight).parent(canvasParentRef);\n    psRef.current = new ParticleSystem(); // ParticleSystem 객체 초기화\n    offset = p5.createVector(p5.random(1000), p5.random(1000));\n    origin = p5.createVector(p5.width / 2, p5.height / 2);\n  };\n\n  const draw = (p5) => {\n    if (bg % 2 === 0) p5.background(87, 6, 140);\n    else p5.background(0, 0, 0, 20);\n\n    if (psRef.current) {\n      // 마우스가 움직이지 않을 때 자동 생성\n      if (\n        p5.mouseX === p5.pmouseX &&\n        p5.mouseY === p5.pmouseY &&\n        p5.millis() - ptime > 800\n      ) {\n        const step = p5.createVector(\n          p5.noise(offset.x) - 0.5,\n          p5.noise(offset.y) - 0.5\n        );\n        step.mult(10);\n        let pos = p5.Vector.add(origin, step);\n        pos.x = (pos.x + p5.width) % p5.width;\n        pos.y = (pos.y + p5.height) % p5.height;\n\n        psRef.current.addParticle(pos, origin, p5);\n        origin = pos;\n        offset.x += 0.01;\n        offset.y += 0.01;\n      }\n\n      psRef.current.run(p5);\n    }\n  };\n\n  const windowResized = (p5) => {\n    p5.resizeCanvas(p5.windowWidth, p5.windowHeight);\n  };\n\n  const mouseClicked = () => {\n    bg++;\n  };\n\n  const mouseMoved = (p5) => {\n    if (psRef.current) {\n      const pos = p5.createVector(p5.mouseX, p5.mouseY);\n      const ppos = p5.createVector(p5.pmouseX, p5.pmouseY);\n      psRef.current.addParticle(pos, ppos, p5);\n      ptime = p5.millis();\n      origin = p5.createVector(p5.width / 2, p5.height / 2); // 리셋\n    }\n  };\n\n  return (\n    <Sketch\n      setup={setup}\n      draw={draw}\n      windowResized={windowResized}\n      mouseClicked={mouseClicked}\n      mouseMoved={mouseMoved}\n    />\n  );\n};\n\nexport default ParticleSystemSketch;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}