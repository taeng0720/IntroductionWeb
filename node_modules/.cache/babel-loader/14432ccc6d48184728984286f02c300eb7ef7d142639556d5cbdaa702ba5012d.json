{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst useSmoothScroll = () => {\n  _s();\n  useEffect(() => {\n    let isScrolling = false;\n    const scrollToSection = direction => {\n      if (isScrolling) return; // 이미 스크롤 중일 때 이벤트 무시\n      isScrolling = true;\n      const start = window.scrollY;\n      const end = direction > 0 ? start + window.innerHeight : start - window.innerHeight;\n      const duration = 1000; // 스크롤 지속 시간 (1초)\n      let startTime = null;\n      const animateScroll = time => {\n        if (!startTime) startTime = time;\n        const progress = Math.min((time - startTime) / duration, 1); // 진행률 계산\n        const easeOutQuad = progress * (2 - progress); // 감속 곡선 적용 (Ease Out)\n\n        window.scrollTo(0, start + (end - start) * easeOutQuad);\n        if (progress < 1) {\n          requestAnimationFrame(animateScroll);\n        } else {\n          isScrolling = false; // 스크롤 완료 후 상태 초기화\n        }\n      };\n      requestAnimationFrame(animateScroll);\n    };\n    const handleWheel = event => {\n      const direction = event.deltaY > 0 ? 1 : -1; // 스크롤 방향 감지\n      scrollToSection(direction);\n    };\n    window.addEventListener(\"wheel\", handleWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n};\n_s(useSmoothScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useSmoothScroll;","map":{"version":3,"names":["useEffect","useSmoothScroll","_s","isScrolling","scrollToSection","direction","start","window","scrollY","end","innerHeight","duration","startTime","animateScroll","time","progress","Math","min","easeOutQuad","scrollTo","requestAnimationFrame","handleWheel","event","deltaY","addEventListener","removeEventListener"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/SmoothScroll.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst useSmoothScroll = () => {\n    useEffect(() => {\n        let isScrolling = false;\n\n        const scrollToSection = (direction) => {\n            if (isScrolling) return; // 이미 스크롤 중일 때 이벤트 무시\n            isScrolling = true;\n\n            const start = window.scrollY;\n            const end = direction > 0 ? start + window.innerHeight : start - window.innerHeight;\n            const duration = 1000; // 스크롤 지속 시간 (1초)\n            let startTime = null;\n\n            const animateScroll = (time) => {\n                if (!startTime) startTime = time;\n                const progress = Math.min((time - startTime) / duration, 1); // 진행률 계산\n                const easeOutQuad = progress * (2 - progress); // 감속 곡선 적용 (Ease Out)\n\n                window.scrollTo(0, start + (end - start) * easeOutQuad);\n\n                if (progress < 1) {\n                    requestAnimationFrame(animateScroll);\n                } else {\n                    isScrolling = false; // 스크롤 완료 후 상태 초기화\n                }\n            };\n\n            requestAnimationFrame(animateScroll);\n        };\n\n        const handleWheel = (event) => {\n            const direction = event.deltaY > 0 ? 1 : -1; // 스크롤 방향 감지\n            scrollToSection(direction);\n        };\n\n        window.addEventListener(\"wheel\", handleWheel);\n\n        return () => {\n            window.removeEventListener(\"wheel\", handleWheel);\n        };\n    }, []);\n};\n\nexport default useSmoothScroll;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BF,SAAS,CAAC,MAAM;IACZ,IAAIG,WAAW,GAAG,KAAK;IAEvB,MAAMC,eAAe,GAAIC,SAAS,IAAK;MACnC,IAAIF,WAAW,EAAE,OAAO,CAAC;MACzBA,WAAW,GAAG,IAAI;MAElB,MAAMG,KAAK,GAAGC,MAAM,CAACC,OAAO;MAC5B,MAAMC,GAAG,GAAGJ,SAAS,GAAG,CAAC,GAAGC,KAAK,GAAGC,MAAM,CAACG,WAAW,GAAGJ,KAAK,GAAGC,MAAM,CAACG,WAAW;MACnF,MAAMC,QAAQ,GAAG,IAAI,CAAC,CAAC;MACvB,IAAIC,SAAS,GAAG,IAAI;MAEpB,MAAMC,aAAa,GAAIC,IAAI,IAAK;QAC5B,IAAI,CAACF,SAAS,EAAEA,SAAS,GAAGE,IAAI;QAChC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACH,IAAI,GAAGF,SAAS,IAAID,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAMO,WAAW,GAAGH,QAAQ,IAAI,CAAC,GAAGA,QAAQ,CAAC,CAAC,CAAC;;QAE/CR,MAAM,CAACY,QAAQ,CAAC,CAAC,EAAEb,KAAK,GAAG,CAACG,GAAG,GAAGH,KAAK,IAAIY,WAAW,CAAC;QAEvD,IAAIH,QAAQ,GAAG,CAAC,EAAE;UACdK,qBAAqB,CAACP,aAAa,CAAC;QACxC,CAAC,MAAM;UACHV,WAAW,GAAG,KAAK,CAAC,CAAC;QACzB;MACJ,CAAC;MAEDiB,qBAAqB,CAACP,aAAa,CAAC;IACxC,CAAC;IAED,MAAMQ,WAAW,GAAIC,KAAK,IAAK;MAC3B,MAAMjB,SAAS,GAAGiB,KAAK,CAACC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7CnB,eAAe,CAACC,SAAS,CAAC;IAC9B,CAAC;IAEDE,MAAM,CAACiB,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;IAE7C,OAAO,MAAM;MACTd,MAAM,CAACkB,mBAAmB,CAAC,OAAO,EAAEJ,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAACnB,EAAA,CAzCID,eAAe;AA2CrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}