{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst useSmoothScroll = () => {\n  _s();\n  useEffect(() => {\n    const scrollContainer = document.querySelector(\".scroll-container\");\n    const sections = document.querySelectorAll(\".scroll-section\");\n    let isScrolling = false; // 스크롤 잠금\n    let currentSectionIndex = 0; // 현재 섹션 인덱스\n\n    const handleScroll = event => {\n      if (isScrolling) return; // 스크롤 중이면 무시\n      isScrolling = true;\n      const delta = event.deltaY > 0 ? 1 : -1; // 스크롤 방향\n\n      // 다음 섹션 인덱스 계산 (0 ~ 마지막 섹션)\n      currentSectionIndex = Math.min(Math.max(currentSectionIndex + delta, 0), sections.length - 1);\n\n      // 정확한 섹션 위치로 스크롤\n      scrollContainer.scrollTo({\n        top: currentSectionIndex * window.innerHeight,\n        behavior: \"smooth\"\n      });\n\n      // 스크롤 잠금 해제 (800ms 후)\n      setTimeout(() => {\n        isScrolling = false;\n      }, 800);\n    };\n\n    // wheel 이벤트에 핸들러 추가\n    scrollContainer.addEventListener(\"wheel\", handleScroll, {\n      passive: false\n    });\n    return () => {\n      scrollContainer.removeEventListener(\"wheel\", handleScroll);\n    };\n  }, []);\n};\n_s(useSmoothScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useSmoothScroll;","map":{"version":3,"names":["useEffect","useSmoothScroll","_s","scrollContainer","document","querySelector","sections","querySelectorAll","isScrolling","currentSectionIndex","handleScroll","event","delta","deltaY","Math","min","max","length","scrollTo","top","window","innerHeight","behavior","setTimeout","addEventListener","passive","removeEventListener"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/SmoothScroll.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst useSmoothScroll = () => {\n    useEffect(() => {\n        const scrollContainer = document.querySelector(\".scroll-container\");\n        const sections = document.querySelectorAll(\".scroll-section\");\n\n        let isScrolling = false; // 스크롤 잠금\n        let currentSectionIndex = 0; // 현재 섹션 인덱스\n\n        const handleScroll = (event) => {\n            if (isScrolling) return; // 스크롤 중이면 무시\n            isScrolling = true;\n\n            const delta = event.deltaY > 0 ? 1 : -1; // 스크롤 방향\n\n            // 다음 섹션 인덱스 계산 (0 ~ 마지막 섹션)\n            currentSectionIndex = Math.min(\n                Math.max(currentSectionIndex + delta, 0),\n                sections.length - 1\n            );\n\n            // 정확한 섹션 위치로 스크롤\n            scrollContainer.scrollTo({\n                top: currentSectionIndex * window.innerHeight,\n                behavior: \"smooth\",\n            });\n\n            // 스크롤 잠금 해제 (800ms 후)\n            setTimeout(() => {\n                isScrolling = false;\n            }, 800);\n        };\n\n        // wheel 이벤트에 핸들러 추가\n        scrollContainer.addEventListener(\"wheel\", handleScroll, { passive: false });\n\n        return () => {\n            scrollContainer.removeEventListener(\"wheel\", handleScroll);\n        };\n    }, []);\n};\n\nexport default useSmoothScroll;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BF,SAAS,CAAC,MAAM;IACZ,MAAMG,eAAe,GAAGC,QAAQ,CAACC,aAAa,CAAC,mBAAmB,CAAC;IACnE,MAAMC,QAAQ,GAAGF,QAAQ,CAACG,gBAAgB,CAAC,iBAAiB,CAAC;IAE7D,IAAIC,WAAW,GAAG,KAAK,CAAC,CAAC;IACzB,IAAIC,mBAAmB,GAAG,CAAC,CAAC,CAAC;;IAE7B,MAAMC,YAAY,GAAIC,KAAK,IAAK;MAC5B,IAAIH,WAAW,EAAE,OAAO,CAAC;MACzBA,WAAW,GAAG,IAAI;MAElB,MAAMI,KAAK,GAAGD,KAAK,CAACE,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEzC;MACAJ,mBAAmB,GAAGK,IAAI,CAACC,GAAG,CAC1BD,IAAI,CAACE,GAAG,CAACP,mBAAmB,GAAGG,KAAK,EAAE,CAAC,CAAC,EACxCN,QAAQ,CAACW,MAAM,GAAG,CACtB,CAAC;;MAED;MACAd,eAAe,CAACe,QAAQ,CAAC;QACrBC,GAAG,EAAEV,mBAAmB,GAAGW,MAAM,CAACC,WAAW;QAC7CC,QAAQ,EAAE;MACd,CAAC,CAAC;;MAEF;MACAC,UAAU,CAAC,MAAM;QACbf,WAAW,GAAG,KAAK;MACvB,CAAC,EAAE,GAAG,CAAC;IACX,CAAC;;IAED;IACAL,eAAe,CAACqB,gBAAgB,CAAC,OAAO,EAAEd,YAAY,EAAE;MAAEe,OAAO,EAAE;IAAM,CAAC,CAAC;IAE3E,OAAO,MAAM;MACTtB,eAAe,CAACuB,mBAAmB,CAAC,OAAO,EAAEhB,YAAY,CAAC;IAC9D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAACR,EAAA,CAvCID,eAAe;AAyCrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}