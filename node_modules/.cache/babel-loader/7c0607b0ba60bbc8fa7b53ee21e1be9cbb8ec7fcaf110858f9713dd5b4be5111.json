{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst useSmoothScroll = () => {\n  _s();\n  useEffect(() => {\n    let isScrolling = false;\n    const scrollStep = (distance, stepTime) => {\n      const step = distance / 30; // 스크롤 단계를 나눔 (30회로 나누어 천천히 이동)\n      let currentPosition = window.scrollY; // 현재 스크롤 위치\n      let targetPosition = currentPosition + distance; // 목표 스크롤 위치\n      let stepCount = 0;\n      const scrollAnimation = () => {\n        if (stepCount < 30) {\n          // 30단계로 나누어 스크롤\n          currentPosition += step;\n          window.scrollTo(0, currentPosition);\n          stepCount++;\n          setTimeout(scrollAnimation, stepTime); // 다음 단계 애니메이션\n        } else {\n          isScrolling = false; // 스크롤 완료 후 상태 초기화\n        }\n      };\n      scrollAnimation();\n    };\n    const handleWheel = event => {\n      if (isScrolling) return; // 이미 스크롤 중일 때 이벤트 무시\n      isScrolling = true;\n      const direction = event.deltaY;\n      if (direction > 0) {\n        // 아래로 스크롤 시\n        scrollStep(window.innerHeight, 10); // 화면 높이만큼 스크롤, 10ms마다 실행\n      } else {\n        // 위로 스크롤 시\n        scrollStep(-window.innerHeight, 10); // 화면 높이만큼 위로 스크롤\n      }\n    };\n    window.addEventListener(\"wheel\", handleWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n};\n_s(useSmoothScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useSmoothScroll;","map":{"version":3,"names":["useEffect","useSmoothScroll","_s","isScrolling","scrollStep","distance","stepTime","step","currentPosition","window","scrollY","targetPosition","stepCount","scrollAnimation","scrollTo","setTimeout","handleWheel","event","direction","deltaY","innerHeight","addEventListener","removeEventListener"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/SmoothScroll.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst useSmoothScroll = () => {\n    useEffect(() => {\n        let isScrolling = false;\n\n        const scrollStep = (distance, stepTime) => {\n            const step = distance / 30; // 스크롤 단계를 나눔 (30회로 나누어 천천히 이동)\n            let currentPosition = window.scrollY; // 현재 스크롤 위치\n            let targetPosition = currentPosition + distance; // 목표 스크롤 위치\n            let stepCount = 0;\n\n            const scrollAnimation = () => {\n                if (stepCount < 30) { // 30단계로 나누어 스크롤\n                    currentPosition += step;\n                    window.scrollTo(0, currentPosition);\n                    stepCount++;\n                    setTimeout(scrollAnimation, stepTime); // 다음 단계 애니메이션\n                } else {\n                    isScrolling = false; // 스크롤 완료 후 상태 초기화\n                }\n            };\n\n            scrollAnimation();\n        };\n\n        const handleWheel = (event) => {\n            if (isScrolling) return; // 이미 스크롤 중일 때 이벤트 무시\n            isScrolling = true;\n\n            const direction = event.deltaY;\n\n            if (direction > 0) {\n                // 아래로 스크롤 시\n                scrollStep(window.innerHeight, 10); // 화면 높이만큼 스크롤, 10ms마다 실행\n            } else {\n                // 위로 스크롤 시\n                scrollStep(-window.innerHeight, 10); // 화면 높이만큼 위로 스크롤\n            }\n        };\n\n        window.addEventListener(\"wheel\", handleWheel);\n\n        return () => {\n            window.removeEventListener(\"wheel\", handleWheel);\n        };\n    }, []);\n};\n\nexport default useSmoothScroll;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BF,SAAS,CAAC,MAAM;IACZ,IAAIG,WAAW,GAAG,KAAK;IAEvB,MAAMC,UAAU,GAAGA,CAACC,QAAQ,EAAEC,QAAQ,KAAK;MACvC,MAAMC,IAAI,GAAGF,QAAQ,GAAG,EAAE,CAAC,CAAC;MAC5B,IAAIG,eAAe,GAAGC,MAAM,CAACC,OAAO,CAAC,CAAC;MACtC,IAAIC,cAAc,GAAGH,eAAe,GAAGH,QAAQ,CAAC,CAAC;MACjD,IAAIO,SAAS,GAAG,CAAC;MAEjB,MAAMC,eAAe,GAAGA,CAAA,KAAM;QAC1B,IAAID,SAAS,GAAG,EAAE,EAAE;UAAE;UAClBJ,eAAe,IAAID,IAAI;UACvBE,MAAM,CAACK,QAAQ,CAAC,CAAC,EAAEN,eAAe,CAAC;UACnCI,SAAS,EAAE;UACXG,UAAU,CAACF,eAAe,EAAEP,QAAQ,CAAC,CAAC,CAAC;QAC3C,CAAC,MAAM;UACHH,WAAW,GAAG,KAAK,CAAC,CAAC;QACzB;MACJ,CAAC;MAEDU,eAAe,CAAC,CAAC;IACrB,CAAC;IAED,MAAMG,WAAW,GAAIC,KAAK,IAAK;MAC3B,IAAId,WAAW,EAAE,OAAO,CAAC;MACzBA,WAAW,GAAG,IAAI;MAElB,MAAMe,SAAS,GAAGD,KAAK,CAACE,MAAM;MAE9B,IAAID,SAAS,GAAG,CAAC,EAAE;QACf;QACAd,UAAU,CAACK,MAAM,CAACW,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;MACxC,CAAC,MAAM;QACH;QACAhB,UAAU,CAAC,CAACK,MAAM,CAACW,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;MACzC;IACJ,CAAC;IAEDX,MAAM,CAACY,gBAAgB,CAAC,OAAO,EAAEL,WAAW,CAAC;IAE7C,OAAO,MAAM;MACTP,MAAM,CAACa,mBAAmB,CAAC,OAAO,EAAEN,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAACd,EAAA,CA7CID,eAAe;AA+CrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}