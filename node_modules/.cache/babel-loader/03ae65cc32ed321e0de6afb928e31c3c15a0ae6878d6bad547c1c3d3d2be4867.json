{"ast":null,"code":"var _jsxFileName = \"/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/ParticleCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport p5 from \"p5\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ParticleCanvas = () => {\n  _s();\n  const canvasRef = useRef(null); // 캔버스를 연결할 ref\n\n  useEffect(() => {\n    let ps = [];\n    let time,\n      ptime = 0;\n    let offset, origin;\n    let bg = 0;\n    const colors = [\"#FFE300\", \"#FF7494\", \"#00E6FF\", \"#89FF47\"];\n\n    // p5 스케치 함수 정의\n    const sketch = p => {\n      p.setup = () => {\n        p.createCanvas(window.innerWidth, window.innerHeight);\n        ps = new ParticleSystem(p.createVector(p.width / 2, p.height / 2));\n        p.background(0, 0, 0);\n        offset = p.createVector(p.random(1000), p.random(1000));\n        origin = p.createVector(p.width / 2, p.height / 2);\n      };\n      p.draw = () => {\n        if (bg % 2 === 0) p.background(87, 6, 140);else p.background(0, 0, 0, 20);\n        if (p.mouseX === p.pmouseX && p.mouseY === p.pmouseY && p.millis() - ptime > 800) {\n          let step = p.createVector(p.noise(offset.x) - 0.5, p.noise(offset.y) - 0.5);\n          step.mult(10);\n          let pos = p5.Vector.add(origin, step);\n          pos.x = (pos.x + p.width) % p.width;\n          pos.y = (pos.y + p.height) % p.height;\n          ps.addParticle(pos, origin);\n          origin = pos;\n          offset.add(0.01, 0.01);\n        }\n        ps.run();\n      };\n      p.mouseClicked = () => {\n        bg++;\n      };\n      p.mouseMoved = () => {\n        const pos = p.createVector(p.mouseX, p.mouseY);\n        const ppos = p.createVector(p.pmouseX, p.pmouseY);\n        ps.addParticle(pos, ppos);\n        ptime = p.millis();\n        origin = p.createVector(p.width / 2, p.height / 2);\n      };\n      class Particle {\n        constructor(pos, ppos) {\n          this.pos = pos.copy();\n          this.col = p.random(colors);\n          this.size = p.random(5, 30);\n          this.fill = p.random([0, 1]);\n          this.velocity = p.createVector(0, 0);\n          this.acceleration = p5.Vector.sub(ppos, pos).mult(0.02);\n          this.offset = p.createVector(p.random(0, 1000), p.random(0, 1000));\n        }\n        update() {\n          this.velocity.add(this.acceleration);\n          this.pos.add(this.velocity);\n          this.pos.add(p.createVector(10 * (p.noise(this.offset.x) - 0.5), 10 * (p.noise(this.offset.y) - 0.5)));\n          this.offset.add(0.01, 0.01);\n          this.size *= 0.95;\n          if (this.velocity.mag() > 1) this.velocity.mult(0.95);\n        }\n        isDead() {\n          return this.size < 1;\n        }\n        render() {\n          if (this.fill === 1) {\n            p.noStroke();\n            p.fill(this.col);\n          } else {\n            p.noFill();\n            p.stroke(this.col);\n          }\n          p.ellipse(this.pos.x, this.pos.y, this.size, this.size);\n        }\n      }\n      class ParticleSystem {\n        constructor() {\n          this.particles = [];\n        }\n        addParticle(pos, ppos) {\n          this.particles.push(new Particle(pos, ppos));\n        }\n        run() {\n          for (let i = this.particles.length - 1; i >= 0; i--) {\n            const p = this.particles[i];\n            p.update();\n            p.render();\n            if (p.isDead()) this.particles.splice(i, 1);\n          }\n        }\n      }\n    };\n\n    // p5 스케치 실행\n    const myP5 = new p5(sketch, canvasRef.current);\n\n    // 컴포넌트 언마운트 시 캔버스 제거\n    return () => {\n      myP5.remove();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 12\n  }, this);\n};\n_s(ParticleCanvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n_c = ParticleCanvas;\nexport default ParticleCanvas;\nvar _c;\n$RefreshReg$(_c, \"ParticleCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","p5","jsxDEV","_jsxDEV","ParticleCanvas","_s","canvasRef","ps","time","ptime","offset","origin","bg","colors","sketch","p","setup","createCanvas","window","innerWidth","innerHeight","ParticleSystem","createVector","width","height","background","random","draw","mouseX","pmouseX","mouseY","pmouseY","millis","step","noise","x","y","mult","pos","Vector","add","addParticle","run","mouseClicked","mouseMoved","ppos","Particle","constructor","copy","col","size","fill","velocity","acceleration","sub","update","mag","isDead","render","noStroke","noFill","stroke","ellipse","particles","push","i","length","splice","myP5","current","remove","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/ParticleCanvas.js"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport p5 from \"p5\";\n\nconst ParticleCanvas = () => {\n    const canvasRef = useRef(null); // 캔버스를 연결할 ref\n\n    useEffect(() => {\n        let ps = [];\n        let time, ptime = 0;\n        let offset, origin;\n        let bg = 0;\n\n        const colors = [\"#FFE300\", \"#FF7494\", \"#00E6FF\", \"#89FF47\"];\n\n        // p5 스케치 함수 정의\n        const sketch = (p) => {\n            p.setup = () => {\n                p.createCanvas(window.innerWidth, window.innerHeight);\n                ps = new ParticleSystem(p.createVector(p.width / 2, p.height / 2));\n                p.background(0, 0, 0);\n                offset = p.createVector(p.random(1000), p.random(1000));\n                origin = p.createVector(p.width / 2, p.height / 2);\n            };\n\n            p.draw = () => {\n                if (bg % 2 === 0) p.background(87, 6, 140);\n                else p.background(0, 0, 0, 20);\n\n                if (p.mouseX === p.pmouseX && p.mouseY === p.pmouseY && p.millis() - ptime > 800) {\n                    let step = p.createVector(p.noise(offset.x) - 0.5, p.noise(offset.y) - 0.5);\n                    step.mult(10);\n                    let pos = p5.Vector.add(origin, step);\n                    pos.x = (pos.x + p.width) % p.width;\n                    pos.y = (pos.y + p.height) % p.height;\n\n                    ps.addParticle(pos, origin);\n                    origin = pos;\n                    offset.add(0.01, 0.01);\n                }\n\n                ps.run();\n            };\n\n            p.mouseClicked = () => {\n                bg++;\n            };\n\n            p.mouseMoved = () => {\n                const pos = p.createVector(p.mouseX, p.mouseY);\n                const ppos = p.createVector(p.pmouseX, p.pmouseY);\n                ps.addParticle(pos, ppos);\n                ptime = p.millis();\n                origin = p.createVector(p.width / 2, p.height / 2);\n            };\n\n            class Particle {\n                constructor(pos, ppos) {\n                    this.pos = pos.copy();\n                    this.col = p.random(colors);\n                    this.size = p.random(5, 30);\n                    this.fill = p.random([0, 1]);\n                    this.velocity = p.createVector(0, 0);\n                    this.acceleration = p5.Vector.sub(ppos, pos).mult(0.02);\n                    this.offset = p.createVector(p.random(0, 1000), p.random(0, 1000));\n                }\n\n                update() {\n                    this.velocity.add(this.acceleration);\n                    this.pos.add(this.velocity);\n                    this.pos.add(p.createVector(10 * (p.noise(this.offset.x) - 0.5), 10 * (p.noise(this.offset.y) - 0.5)));\n                    this.offset.add(0.01, 0.01);\n                    this.size *= 0.95;\n                    if (this.velocity.mag() > 1) this.velocity.mult(0.95);\n                }\n\n                isDead() {\n                    return this.size < 1;\n                }\n\n                render() {\n                    if (this.fill === 1) {\n                        p.noStroke();\n                        p.fill(this.col);\n                    } else {\n                        p.noFill();\n                        p.stroke(this.col);\n                    }\n                    p.ellipse(this.pos.x, this.pos.y, this.size, this.size);\n                }\n            }\n\n            class ParticleSystem {\n                constructor() {\n                    this.particles = [];\n                }\n\n                addParticle(pos, ppos) {\n                    this.particles.push(new Particle(pos, ppos));\n                }\n\n                run() {\n                    for (let i = this.particles.length - 1; i >= 0; i--) {\n                        const p = this.particles[i];\n                        p.update();\n                        p.render();\n                        if (p.isDead()) this.particles.splice(i, 1);\n                    }\n                }\n            }\n        };\n\n        // p5 스케치 실행\n        const myP5 = new p5(sketch, canvasRef.current);\n\n        // 컴포넌트 언마운트 시 캔버스 제거\n        return () => {\n            myP5.remove();\n        };\n    }, []);\n\n    return <div ref={canvasRef} />;\n};\n\nexport default ParticleCanvas;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}