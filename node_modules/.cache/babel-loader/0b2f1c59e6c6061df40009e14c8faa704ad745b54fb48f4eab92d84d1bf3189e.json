{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nconst useSmoothScroll = () => {\n  _s();\n  useEffect(() => {\n    let isScrolling = false;\n    const scrollToSection = direction => {\n      if (isScrolling) return; // 이미 스크롤 중일 때 이벤트 무시\n      isScrolling = true;\n\n      // 모든 섹션의 위치를 가져옴\n      const sections = document.querySelectorAll(\"section\");\n      const positions = Array.from(sections).map(section => section.offsetTop);\n\n      // 현재 스크롤 위치\n      const currentScroll = window.scrollY;\n\n      // 다음 섹션의 인덱스 계산\n      let targetIndex = positions.findIndex(pos => pos > currentScroll);\n\n      // 현재 섹션에서 방향에 따라 이동\n      if (direction > 0) {\n        // 아래로 스크롤\n        targetIndex = targetIndex === -1 ? positions.length - 1 : targetIndex;\n      } else {\n        // 위로 스크롤\n        targetIndex = targetIndex > 0 ? targetIndex - 1 : 0;\n      }\n      const targetPosition = positions[targetIndex];\n      const start = currentScroll;\n      const duration = 1000; // 스크롤 지속 시간\n      let startTime = null;\n      const animateScroll = time => {\n        if (!startTime) startTime = time;\n        const progress = Math.min((time - startTime) / duration, 1); // 0 ~ 1 진행률\n        const easeOutQuad = progress * (2 - progress);\n        window.scrollTo(0, start + (targetPosition - start) * easeOutQuad);\n        if (progress < 1) {\n          requestAnimationFrame(animateScroll);\n        } else {\n          isScrolling = false; // 스크롤 완료\n        }\n      };\n      requestAnimationFrame(animateScroll);\n    };\n    const handleWheel = event => {\n      const direction = event.deltaY > 0 ? 1 : -1; // 스크롤 방향 감지\n      scrollToSection(direction);\n    };\n    window.addEventListener(\"wheel\", handleWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", handleWheel);\n    };\n  }, []);\n};\n_s(useSmoothScroll, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\nexport default useSmoothScroll;","map":{"version":3,"names":["useEffect","useSmoothScroll","_s","isScrolling","scrollToSection","direction","sections","document","querySelectorAll","positions","Array","from","map","section","offsetTop","currentScroll","window","scrollY","targetIndex","findIndex","pos","length","targetPosition","start","duration","startTime","animateScroll","time","progress","Math","min","easeOutQuad","scrollTo","requestAnimationFrame","handleWheel","event","deltaY","addEventListener","removeEventListener"],"sources":["/Users/taeng0720/Documents/GitHub/IntroductionWeb/src/Component/Menu/js/SmoothScroll.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nconst useSmoothScroll = () => {\n    useEffect(() => {\n        let isScrolling = false;\n\n        const scrollToSection = (direction) => {\n            if (isScrolling) return; // 이미 스크롤 중일 때 이벤트 무시\n            isScrolling = true;\n\n            // 모든 섹션의 위치를 가져옴\n            const sections = document.querySelectorAll(\"section\");\n            const positions = Array.from(sections).map((section) => section.offsetTop);\n\n            // 현재 스크롤 위치\n            const currentScroll = window.scrollY;\n\n            // 다음 섹션의 인덱스 계산\n            let targetIndex = positions.findIndex((pos) => pos > currentScroll);\n\n            // 현재 섹션에서 방향에 따라 이동\n            if (direction > 0) {\n                // 아래로 스크롤\n                targetIndex = targetIndex === -1 ? positions.length - 1 : targetIndex;\n            } else {\n                // 위로 스크롤\n                targetIndex = targetIndex > 0 ? targetIndex - 1 : 0;\n            }\n\n            const targetPosition = positions[targetIndex];\n\n            const start = currentScroll;\n            const duration = 1000; // 스크롤 지속 시간\n            let startTime = null;\n\n            const animateScroll = (time) => {\n                if (!startTime) startTime = time;\n                const progress = Math.min((time - startTime) / duration, 1); // 0 ~ 1 진행률\n                const easeOutQuad = progress * (2 - progress);\n\n                window.scrollTo(0, start + (targetPosition - start) * easeOutQuad);\n\n                if (progress < 1) {\n                    requestAnimationFrame(animateScroll);\n                } else {\n                    isScrolling = false; // 스크롤 완료\n                }\n            };\n\n            requestAnimationFrame(animateScroll);\n        };\n\n        const handleWheel = (event) => {\n            const direction = event.deltaY > 0 ? 1 : -1; // 스크롤 방향 감지\n            scrollToSection(direction);\n        };\n\n        window.addEventListener(\"wheel\", handleWheel);\n\n        return () => {\n            window.removeEventListener(\"wheel\", handleWheel);\n        };\n    }, []);\n};\n\nexport default useSmoothScroll;\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,OAAO;AAEjC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1BF,SAAS,CAAC,MAAM;IACZ,IAAIG,WAAW,GAAG,KAAK;IAEvB,MAAMC,eAAe,GAAIC,SAAS,IAAK;MACnC,IAAIF,WAAW,EAAE,OAAO,CAAC;MACzBA,WAAW,GAAG,IAAI;;MAElB;MACA,MAAMG,QAAQ,GAAGC,QAAQ,CAACC,gBAAgB,CAAC,SAAS,CAAC;MACrD,MAAMC,SAAS,GAAGC,KAAK,CAACC,IAAI,CAACL,QAAQ,CAAC,CAACM,GAAG,CAAEC,OAAO,IAAKA,OAAO,CAACC,SAAS,CAAC;;MAE1E;MACA,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO;;MAEpC;MACA,IAAIC,WAAW,GAAGT,SAAS,CAACU,SAAS,CAAEC,GAAG,IAAKA,GAAG,GAAGL,aAAa,CAAC;;MAEnE;MACA,IAAIV,SAAS,GAAG,CAAC,EAAE;QACf;QACAa,WAAW,GAAGA,WAAW,KAAK,CAAC,CAAC,GAAGT,SAAS,CAACY,MAAM,GAAG,CAAC,GAAGH,WAAW;MACzE,CAAC,MAAM;QACH;QACAA,WAAW,GAAGA,WAAW,GAAG,CAAC,GAAGA,WAAW,GAAG,CAAC,GAAG,CAAC;MACvD;MAEA,MAAMI,cAAc,GAAGb,SAAS,CAACS,WAAW,CAAC;MAE7C,MAAMK,KAAK,GAAGR,aAAa;MAC3B,MAAMS,QAAQ,GAAG,IAAI,CAAC,CAAC;MACvB,IAAIC,SAAS,GAAG,IAAI;MAEpB,MAAMC,aAAa,GAAIC,IAAI,IAAK;QAC5B,IAAI,CAACF,SAAS,EAAEA,SAAS,GAAGE,IAAI;QAChC,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,CAACH,IAAI,GAAGF,SAAS,IAAID,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;QAC7D,MAAMO,WAAW,GAAGH,QAAQ,IAAI,CAAC,GAAGA,QAAQ,CAAC;QAE7CZ,MAAM,CAACgB,QAAQ,CAAC,CAAC,EAAET,KAAK,GAAG,CAACD,cAAc,GAAGC,KAAK,IAAIQ,WAAW,CAAC;QAElE,IAAIH,QAAQ,GAAG,CAAC,EAAE;UACdK,qBAAqB,CAACP,aAAa,CAAC;QACxC,CAAC,MAAM;UACHvB,WAAW,GAAG,KAAK,CAAC,CAAC;QACzB;MACJ,CAAC;MAED8B,qBAAqB,CAACP,aAAa,CAAC;IACxC,CAAC;IAED,MAAMQ,WAAW,GAAIC,KAAK,IAAK;MAC3B,MAAM9B,SAAS,GAAG8B,KAAK,CAACC,MAAM,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAC7ChC,eAAe,CAACC,SAAS,CAAC;IAC9B,CAAC;IAEDW,MAAM,CAACqB,gBAAgB,CAAC,OAAO,EAAEH,WAAW,CAAC;IAE7C,OAAO,MAAM;MACTlB,MAAM,CAACsB,mBAAmB,CAAC,OAAO,EAAEJ,WAAW,CAAC;IACpD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;AACV,CAAC;AAAChC,EAAA,CA7DID,eAAe;AA+DrB,eAAeA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}